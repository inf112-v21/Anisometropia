<Project>
  <Name>RoboRally</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Untitled</Name>
    <Language>Java</Language>
    <Entities>
      <Entity type="Class">
        <Name>Main</Name>
        <Access>Public</Access>
        <Location left="30" top="25" />
        <Size width="162" height="111" />
        <Collapsed>True</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>PlayScreen</Name>
        <Access>Public</Access>
        <Location left="469" top="572" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public PlayScreen(GameApplication gameApplication, GraphicalGameMap gameMap, PlayerQueue playerQueue)</Member>
        <Member type="Method">public void render()</Member>
        <Member type="Method">public void dispose()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>GameLogic</Name>
        <Access>Public</Access>
        <Location left="693" top="671" />
        <Size width="162" height="298" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public GameLogic(GameMap gameMap, PlayerQueue playerQueue)</Member>
        <Member type="Method">public void addPlayer(int spawnX, int spawnY, String name)</Member>
        <Member type="Method">public void update()</Member>
        <Member type="Method">public void dealRegisterCards()</Member>
        <Member type="Method">public void executeCard()</Member>
        <Member type="Method">public void endOfTurnCheck()</Member>
        <Member type="Method">public void endOfRoundCheck()</Member>
        <Member type="Method">public void checkIfOnlyOnePlayerLeft()</Member>
        <Member type="Method">public void gameReset()</Member>
        <Member type="Method">public boolean checkWin(Player player)</Member>
        <Member type="Method">public boolean checkLoss(int x, int y)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ControlScreen</Name>
        <Access>Public</Access>
        <Location left="419" top="360" />
        <Size width="162" height="155" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void create()</Member>
        <Member type="Method">public void render()</Member>
        <Member type="Method">public void dispose()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>GraphicalGameMap</Name>
        <Access>Public</Access>
        <Location left="242" top="453" />
        <Size width="162" height="171" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public GraphicalGameMap()</Member>
        <Member type="Method">public boolean isThereFlagHere(int x, int y)</Member>
        <Member type="Method">public boolean isThereHoleOnThisPosition(int x, int y)</Member>
        <Member type="Method">public boolean isThereConveyorOnThisPosition(int x, int y)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TextualGameMap</Name>
        <Access>Public</Access>
        <Location left="30" top="451" />
        <Size width="162" height="171" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public TextualGameMap(int width, int height)</Member>
        <Member type="Method">public void createGrid()</Member>
        <Member type="Method">public boolean isThereFlagHere(int x, int y)</Member>
        <Member type="Method">public boolean isThereHoleOnThisPosition(int x, int y)</Member>
        <Member type="Method">public boolean isThereConveyorOnThisPosition(int x, int y)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>PlayerQueue</Name>
        <Access>Public</Access>
        <Location left="474" top="823" />
        <Size width="162" height="144" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public PlayerQueue()</Member>
        <Member type="Method">public void next()</Member>
        <Member type="Method">public void add(Player player)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Player</Name>
        <Access>Public</Access>
        <Location left="242" top="656" />
        <Size width="162" height="311" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public Player(int x, int y, String playerName, GameMap gameMap)</Member>
        <Member type="Method">public void move(int dx, int dy)</Member>
        <Member type="Method">public int getDirection()</Member>
        <Member type="Method">public void rotate(int amountToRotate)</Member>
        <Member type="Method">public void moveForward(int amountToMove)</Member>
        <Member type="Method">public void moveByDirection(int desiredDirection)</Member>
        <Member type="Method">public boolean checkIfPlayerCanRespawn()</Member>
        <Member type="Method">public void respawn()</Member>
        <Member type="Method">public void playerAlive()</Member>
        <Member type="Method">public boolean isPlayerDead()</Member>
        <Member type="Method">public void playerWins()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IPlayer</Name>
        <Access>Public</Access>
        <Location left="30" top="656" />
        <Size width="162" height="311" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void move(int dx, int dy)</Member>
        <Member type="Method">boolean canMove(int dx, int dy)</Member>
        <Member type="Method">void rotate(int amountToRotate)</Member>
        <Member type="Method">void moveForward(int amountToMove)</Member>
        <Member type="Method">void updateLifeTokens()</Member>
        <Member type="Method">boolean checkIfPlayerCanRespawn()</Member>
        <Member type="Method">void respawn()</Member>
        <Member type="Method">void checkIfPlayerTooDamaged()</Member>
        <Member type="Method">void playerAlive()</Member>
        <Member type="Method">void playerDies()</Member>
        <Member type="Method">boolean isPlayerDead()</Member>
        <Member type="Method">void playerWins()</Member>
        <Member type="Method">boolean hasWon()</Member>
      </Entity>
      <Entity type="Class">
        <Name>GameMap</Name>
        <Access>Public</Access>
        <Location left="30" top="103" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public abstract boolean isThereFlagHere(int x, int y)</Member>
        <Member type="Method">public abstract int getAssetLayerID(int x, int y)</Member>
        <Member type="Method">public abstract boolean isThereHoleOnThisPosition(int x, int y)</Member>
        <Member type="Method">public abstract boolean isThereConveyorOnThisPosition(int x, int y)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Multiplayer</Name>
        <Access>Public</Access>
        <Location left="1093" top="50" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public Multiplayer(Boolean host)</Member>
        <Member type="Method">public void disconnect()</Member>
        <Member type="Method">public void send()</Member>
        <Member type="Method">public void receive()</Member>
        <Member type="Method">public boolean isConnected()</Member>
        <Member type="Method">public void run()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DeckOfProgramCards</Name>
        <Access>Public</Access>
        <Location left="854" top="414" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public DeckOfProgramCards()</Member>
        <Member type="Method">private void generateDeck()</Member>
        <Member type="Method">private void addCardsToDeck(String graphicLocation, int amountToMoveOrRotate, boolean movementCard, int numOfCards)</Member>
        <Member type="Method">public ArrayList&lt;ProgramCard&gt; dealNineCards()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ConveyorBelts</Name>
        <Access>Public</Access>
        <Location left="1093" top="823" />
        <Size width="162" height="146" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void runConveyorBelt(Player player, GameMap gameMap)</Member>
        <Member type="Method">private void conveyorBelt(int tileID, Player player)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Laser</Name>
        <Access>Public</Access>
        <Location left="1093" top="671" />
        <Size width="162" height="100" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void isPlayerHitByLaserBeam()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>GameButton</Name>
        <Access>Public</Access>
        <Location left="257" top="200" />
        <Size width="162" height="131" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public GameButton(int x, int y, int width, int height, boolean isActive, Texture texture)</Member>
        <Member type="Method">public boolean isActive()</Member>
        <Member type="Method">public boolean isMouseOnButton(Vector3 mousePosition)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ProgramCard</Name>
        <Access>Public</Access>
        <Location left="1035" top="414" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public ProgramCard(String graphicLocation, int amountToMoveOrRotate, boolean isMovementCard)</Member>
        <Member type="Method">public void executeProgram()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>AbstractScreen</Name>
        <Access>Public</Access>
        <Location left="658" top="451" />
        <Size width="162" height="137" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public AbstractScreen()</Member>
        <Member type="Method">public void render()</Member>
        <Member type="Method">public void dispose()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>GameApplication</Name>
        <Access>Public</Access>
        <Location left="257" top="25" />
        <Size width="162" height="137" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void create()</Member>
        <Member type="Method">public void render()</Member>
        <Member type="Method">public void dispose()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>GameScreenManager</Name>
        <Access>Public</Access>
        <Location left="469" top="25" />
        <Size width="162" height="137" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public GameScreenManager(GameApplication gameApplication)</Member>
        <Member type="Method">private void initializeGameScreens()</Member>
        <Member type="Method">public void dispose()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>MainMenuScreen</Name>
        <Access>Public</Access>
        <Location left="658" top="62" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public MainMenuScreen(GameApplication gameApplication)</Member>
        <Member type="Method">public void playLocalButtonHasBeenClicked()</Member>
        <Member type="Method">public void playOnNetButtonHasBeenClicked()</Member>
        <Member type="Method">public void quitHasBeenClicked()</Member>
        <Member type="Method">public void speakerButtonHasBeenClicked()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>LocalSetupScreen</Name>
        <Access>Public</Access>
        <Location left="854" top="111" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public LocalSetupScreen(GameApplication gameApplication)</Member>
        <Member type="Method">public void backButtonClicked()</Member>
        <Member type="Method">public void startButtonClicked()</Member>
        <Member type="Method">public void ifClickedSwitchPlayerOrAiStatus()</Member>
        <Member type="Method">public void ifClickedRemoveAddedPlayer()</Member>
        <Member type="Method">public void ifClickedAddPlayer()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Wall</Name>
        <Access>Public</Access>
        <Location left="910" top="784" />
        <Size width="162" height="116" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void canPlayerWalkPastWall()</Member>
        <Member type="Method">public void isPlayerOnWall()</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Dependency" first="2" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>668</X>
          <Y>743</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>658</X>
          <Y>743</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="3" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>493</X>
          <Y>545</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>493</X>
          <Y>545</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="4" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>432</X>
          <Y>592</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>444</X>
          <Y>592</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="2" second="6">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>668</X>
          <Y>881</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>661</X>
          <Y>881</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="6" second="7">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>445</X>
          <Y>870</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>435</X>
          <Y>870</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="7" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>217</X>
          <Y>771</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>217</X>
          <Y>771</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="4" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>267</X>
          <Y>428</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>112</X>
          <Y>344</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="5" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>56</X>
          <Y>426</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>56</X>
          <Y>348</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="2" second="11">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>890</X>
          <Y>682</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>933</X>
          <Y>655</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="2" second="12">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>890</X>
          <Y>943</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1062</X>
          <Y>943</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="3" second="14">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>387</X>
          <Y>412</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>328</X>
          <Y>360</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="2" second="15">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>910</X>
          <Y>695</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1070</X>
          <Y>655</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="11" second="15">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>970</X>
          <Y>381</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1135</X>
          <Y>381</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="17" second="18">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>447</X>
          <Y>48</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="20" second="16">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>773</X>
          <Y>413</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="19" second="16">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>700</X>
          <Y>418</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="0" second="17">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="1" second="16">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>657</X>
          <Y>632</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>741</X>
          <Y>632</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="4" second="7">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>430</X>
          <Y>618</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>441</X>
          <Y>798</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="2" second="13">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>882</X>
          <Y>745</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="2" second="21">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>881</X>
          <Y>830</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>881</X>
          <Y>830</Y>
        </BendPoint>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>